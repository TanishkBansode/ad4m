version: 2.1

orbs:
  node: circleci/node@5.2.0
  go: circleci/go@1.10.0
  rust: circleci/rust@1.6.1

jobs:
  build:
    parameters:
      node-version:
        type: string
        default: "16.20.2"
    docker:
      - image: cimg/base:edge-22.04
    resource_class: large
    steps:
      - checkout
      - rust/install:
          version: "1.73.0"
      - go/install:
          version: "1.20"
      - node/install:
          node-version: << parameters.node-version >>
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update
            sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf protobuf-compiler cmake
      - run:
          name: Install Rust WASM toolchain
          command: rustup target add wasm32-unknown-unknown
      - restore_cache:
          keys:
            - hc-0.3.0-beta-dev-27-v6
            - hc-
            - rust-cache-{{ checksum "Cargo.lock" }}
            - rust-cache-
      - run:
          name: Install HC
          command: |
            ls -la $HOME/.cargo/bin
            if [ ! -f "$HOME/.cargo/bin/hc" ]; then
              git clone https://github.com/holochain/holochain.git
              cd holochain
              git checkout holochain-0.3.0-beta-dev.27
              cd crates/hc
              cargo build --release
              pwd
              ls -la 
              mkdir -p $HOME/.cargo/bin
              cd ../../target/release
              pwd
              ls -lah
              cp hc $HOME/.cargo/bin/hc
              ls -la $HOME/.cargo/bin
              cd $HOME/.cargo/bin
              ./hc --version
            fi
            echo 'export PATH="$HOME/.cargo/bin:$PATH"' >> $BASH_ENV
      - save_cache:
          key: hc-0.3.0-beta-dev-27-v6
          paths:
            - .cargo/bin

      - run:
          name: Install Deno
          command: |
            curl -fsSL https://deno.land/install.sh | sh
            echo 'export DENO_INSTALL="$HOME/.deno"' >> $BASH_ENV
            echo 'export PATH="$DENO_INSTALL/bin:$PATH"' >> $BASH_ENV
      - run:
          name: Install pnpm
          command: npm install -g pnpm
      - restore_cache:
          keys:
            - rust-cache-{{ checksum "Cargo.lock" }}
            - rust-cache-
      - run:
          name: Install dependencies
          command: pnpm install --no-frozen-lockfile
      - run:
          name: Build the workspace
          command: pnpm run build
      - save_cache:
          key: rust-cache-{{ checksum "Cargo.lock" }}
          paths:
            - ./target
            - ~/.cargo/registry
            - ~/.cargo/git
      - persist_to_workspace:
          no-output-timeout: 30m
          root: .
          paths:
            - .

  unit-tests:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Root tests
          command: pnpm test

  integration-tests-js:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run integration tests
          command: cd ./tests/js && pnpm run test-main

  integration-tests-cli:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Run binaries test script
          command: ./tests/bats/bin/bats tests/binaries.bats || cat ~/Library/Logs/DiagnosticReports/*
      - run:
          name: Run integration test script
          command: ./tests/bats/bin/bats tests/integration.bats || cat ~/Library/Logs/DiagnosticReports/*

workflows:
  version: 2
  build-and-test:
    jobs:
      - build
      - unit-tests:
          requires:
            - build
      - integration-tests-js:
          requires:
            - build
      - integration-tests-cli:
          requires:
            - build
